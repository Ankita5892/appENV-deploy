name: CI CD to deploy py app from dev

on:
  push:
    branches: [ development]
  workflow_dispatch:

jobs:
  gitClone: 
     runs-on: ubuntu-latest

     steps:
     - name: Check out my other private repo
       uses: actions/checkout@v2
       with:
        repository: Ankita5892/appENV-deploy
        token: ${{ secrets.my_PAT }}
  
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        git fetch --prune --unshallow
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        export PYTHONPATH=src
        pytest
        
  DockerImage:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ankita5891/python-heroku-app:123
  
  scan:
    runs-on: ubuntu-latest
    #- name: Scan current project
    needs: [gitClone ,build]
    steps:
    - uses: anchore/scan-action@v2
      with:
       path: "./"
       
        
  DevDeploy:
      env:
        HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      runs-on: ubuntu-latest    
      environment: 
        name: APP_DEV
        url: 'https://tranquil-chamber-41091.herokuapp.com'
      needs: [scan]
      steps:
      - uses: actions/checkout@v2
        if: job.status == 'success'
      - run: |
          git fetch --prune --unshallow
          git remote add heroku https://heroku:$HEROKU_API_TOKEN@git.heroku.com/$HEROKU_APP_NAME.git
          git push heroku HEAD:master -f
  web_scan:
    runs-on: ubuntu-latest
    name: Scan the webapplication
    needs: [DevDeploy]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: development
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.2.0
        with:
          token: ${{ secrets.my_PAT }}
          docker_name: 'owasp/zap2docker-stable'
          target: 'https://hidden-fortress-04261.herokuapp.com/'
